{"version":3,"sources":["../../src/app.js","../../src/app.html","../../src/environment.js","../../src/home.js","../../src/home.html","../../src/login.js","../../src/login.html","../../src/main.js","../../src/resources/index.js"],"names":["App","configureRouter","config","router","title","options","pushState","map","route","name","moduleId","nav","debug","testing","Oidc","oidc","message","initializeUserManager","authority","client_id","redirect_uri","response_type","scope","post_logout_redirect_uri","userManager","UserManager","getUser","then","user","console","log","profile","login","signinRedirect","Login","Router","doLogin","response_mode","signinRedirectCallback","navigateToRoute","catch","e","error","configure","aurelia","use","standardConfiguration","feature","developmentLogging","environment","plugin","start","setRoot"],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class App {\n\n    configureRouter(config, router) {\n        config.title = 'Aurelia Client';\n        config.options.pushState = true;\n\n        config.map([\n            { route: '', name: 'home', moduleId: 'home', nav: true, title: 'Home' },\n            { route: 'login', name: 'login', moduleId: 'login', nav: false, title: 'Login' }\n        ]);\n\n        this.router = router;\n    }\n}","<template>\n    <div>\n        <router-view></router-view>\n    </div>\n</template>\n","export default {\n  debug: true,\n  testing: true\n};\n","import { inject } from 'aurelia-framework';\nimport Oidc from 'oidc-client';\n\n@inject(Oidc)\nexport class App {\n    constructor(oidc) {\n        this.oidc = oidc;\n        this.message = '';\n\n        this.initializeUserManager();\n    }\n\n    initializeUserManager() {\n        const config = {\n            authority: 'https://localhost:44396',\n            client_id: 'aurelia',\n            redirect_uri: 'https://localhost:44336/login',\n            response_type: 'code',\n            scope: 'openid profile weather-api',\n            post_logout_redirect_uri: 'https://localhost:44336/',\n        };\n\n        this.userManager = new Oidc.UserManager(config);\n        this.userManager.getUser().then(user => {\n            if (user) {\n                console.log('User logged in', user.profile);\n            } else {\n                console.log('User not logged in');\n            }\n        });\n    }\n\n    login() {\n        this.userManager.signinRedirect();\n    }\n}","<template>\n    <h1>Aurelia Client</h1>\n\n    <button click.delegate=\"login()\">Login</button>\n    <button click.delegate=\"callApi()\">Call API</button>\n    <button click.delegate=\"logout()\">Logout</button>\n\n    <div>${message}</div>\n\n    <pre id=\"results\"></pre>\n</template>\n","import Oidc from 'oidc-client';\r\nimport { inject } from 'aurelia-framework';\r\nimport { Router } from 'aurelia-router';\r\n\r\n@inject(Oidc, Router)\r\nexport class Login {\r\n    constructor(oidc, router) {\r\n        this.oidc = oidc;\r\n        this.router = router;\r\n\r\n        this.doLogin();\r\n    }\r\n\r\n    doLogin() {\r\n        new this.oidc.UserManager({ response_mode: 'query' }).signinRedirectCallback().then(() => {\r\n            this.router.navigateToRoute('home');\r\n        }).catch(e => {\r\n            console.error(e);\r\n        });\r\n    }\r\n}\r\n","<template>\r\n    Logging in...\r\n</template>","// regenerator-runtime is to support async/await syntax in ESNext.\n// If you don't use async/await, you can remove regenerator-runtime.\nimport 'regenerator-runtime/runtime';\nimport environment from './environment';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  aurelia.use.developmentLogging(environment.debug ? 'debug' : 'warn');\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n"]}